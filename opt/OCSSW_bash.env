#
# This script assumes the OCSSWROOT is already set
#

#
# C Compiler (if not already set)
# gcc
#
export CC=${CC:=gcc}

#
# C plus plus Compiler (if not already set)
# g++
#
export CXX=${CXX:=g++}

#
# Fortran Compiler (if not already set)
# gfortran
#
export FC=${FC:=gfortran}

#
# figure out what we are running on
#
# default to linux
export GCC_TUNE="" 
export EOS_LIB_PREFIX=linux
export OCSSW_ARCH=linux
export OCSSW_DEBUG=${OCSSW_DEBUG:=0}

if [ "x`uname -s | grep Darwin`" != "x" ]; then
  #
  # MacOS X
  #
  if [ "x`uname -m | grep ppc`" != "x" ]; then
    export EOS_LIB_PREFIX=macintosh
    export OCSSW_ARCH=macosx_ppc
  else
    export EOS_LIB_PREFIX=macintel64
    export OCSSW_ARCH=macosx_intel
    export DYLD_FALLBACK_LIBRARY_PATH="$OCSSWROOT/opt/lib:/usr/local/lib:/usr/lib"
  fi

else
  if [ "x`uname -m | grep x86_64`" != "x" ]; then
    export EOS_LIB_PREFIX=linux64
    export OCSSW_ARCH=linux_64
  else
    export EOS_LIB_PREFIX=linux
    export OCSSW_ARCH=linux
  fi
fi

#
# setup lib3 directory
#
export LIB3_DIR="${OCSSWROOT}/opt"
export LIB3_INC="${LIB3_DIR}/include"
export LIB3_LIB="${LIB3_DIR}/lib"
export LIB3_CHECK=0
export LIB3_BIN=${LIB3_DIR}/bin

# Third-party libraries
export PGSLIB=$LIB3_DIR/EOS/lib/$EOS_LIB_PREFIX
export PGSINC=$LIB3_DIR/EOS/include
export HDFEOS_LIB=$LIB3_DIR/EOS/lib/$EOS_LIB_PREFIX

# data tree
export OCDATAROOT=$OCSSWROOT/share
 
# var tree
export OCVARROOT=$OCSSWROOT/var
 
# SWl01
export NAVCTL=$OCDATAROOT/seawifs/nav
export NAVQC=$OCDATAROOT/seawifs/nav
export ORBCTL=$OCDATAROOT/seawifs/nav
export ELEMENTS=$OCVARROOT/seawifs
export ASAP_PARMS=$OCDATAROOT/common/nav
export HRPT_STATION_IDENTIFICATION_FILE=$OCDATAROOT/seawifs/station/station_id.dat
 
# OCl1bgen
export OCTS_REGISTRATION_TABLES=$OCDATAROOT/octs/nav
 
# seawifs format checker
export SWTBL=$OCDATAROOT/seawifs
export SWFTBL=$OCDATAROOT/seawifs/qc

# bin directory
export OCSSW_BIN=$OCSSWROOT/bin

# Ancillary data directory
export L2GEN_ANC=$OCVARROOT/anc

# executable path
pathmunge () {
        if ! echo $PATH | egrep -q "(^|:)$1($|:)" ; then
           if [ "$2" = "after" ] ; then
              export PATH=$PATH:$1
           else
              export PATH=$1:$PATH
           fi
        fi
}

# python path 
pypathmunge () {
        if ! echo $PYTHONPATH | egrep -q "(^|:)$1($|:)" ; then
           if [ "$2" = "after" ] ; then
              export PYTHONPATH=$PYTHONPATH:$1
           else
              export PYTHONPATH=$1:$PYTHONPATH
           fi
        fi
}

# add executable paths
pathmunge $OCSSW_BIN
pathmunge $OCSSWROOT/scripts
pathmunge $LIB3_BIN

# add python module paths
pypathmunge $OCSSWROOT/scripts
pypathmunge $OCSSWROOT/scripts/modules

unset pathmunge
unset pypathmunge

# setup proj.4 data directory
export PROJ_LIB=$LIB3_DIR/share/proj

# setup the svn host for direct access or tunneling
#
ping -q -c 1 svn101.domain.sdps &> /dev/null
if [ $? == 0 ]; then
  export OCSSW_SVN=svn101.domain.sdps
else
  export OCSSW_SVN=localhost
fi

